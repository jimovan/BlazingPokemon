@page "/pokemon/{id:int}"
@using BlazingPokemon.Shared
@inject IPokemonService PokemonService
@inject NavigationManager Navigation

<Loader IsLoading="@isLoading"></Loader>

@if (isLoading == false && pokemon is not null)
{
    <div class="pokemon__container type-border-colour-@(pokemon.Type)">

        <h1 class="pokemon__header">@pokemon.Name.ToTitleCase()</h1>

        <div class="pokemon__details">
            <section class="pokemon__image">
                <img src="@pokemon?.Sprite?.Other.OfficalArtwork.ImageUrl" />
                <div class="pokemon__types">
                    @foreach (var type in pokemon.Types)
                    {
                        <span class="label type-colour-@type.Type.Name">@type.Type.Name.ToTitleCase()</span>
                    }
                </div>
            </section>

            <section class="pokemon__stats">
                <ul>
                    <li class="stats-item type-colour-@(pokemon.Type)">
                        <span class="stat-name">Height</span>
                        <span class="stat-value">@(pokemon?.Height / 10) M</span>
                    </li>
                    <li class="stats-item type-colour-@(pokemon.Type)">
                        <span class="stat-name">Weight</span>
                        <span class="stat-value">@(pokemon?.Weight / 10) KG</span>
                    </li>

                    @foreach (var stat in pokemon.Stats)
                    {
                        <li class="stats-item type-colour-@(pokemon.Type)">
                            <span class="stat-name">@stat.StatsName?.Name?.ToTitleCase()</span>
                            <span class="stat-value">@stat.Value</span>
                        </li>
                    }
                </ul>
            </section>

            <section class="pokemon__evolutions">
                <div class="evolutions-component">
                    <h4 class="evolution-heading">Evolution Chain</h4>
                    <div class="evolution__container">

                        @foreach (var evo in pokemon?.Evolutions)
                        {
                            <div class="evolution__pokemon">
                                <img src="@evo.Sprite.Other.OfficalArtwork.ImageUrl" alt="" width="100px" @onclick="@(() => ViewPokemon(evo.Id))"
                                     class="evolution__image" />
                                <h5 class="evolution__name">@evo.Name.ToTitleCase()</h5>
                            </div>
                        }
                    </div>
                </div>
            </section>
        </div>

    </div>
}

@code {

    [Parameter]
    public int Id { get; set; }

    Pokemon pokemon = new();
    bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        pokemon = await PokemonService.GetPokemonById(Id);
        pokemon.Evolutions = await PokemonService.GetPokemonEvolutions(pokemon.Species.Url);

        isLoading = false;
    }

    private void ViewPokemon(int id)
    {
        isLoading = true;
        Navigation.NavigateTo($"/pokemon/{id}");
    }
}